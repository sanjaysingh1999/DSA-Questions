Given an array of integers citations where citations[i] is the number of citations a researcher received for their ith paper, return the researcher's h-index.

According to the definition of h-index on Wikipedia: The h-index is defined as the maximum value of h such that the given researcher has published at least h papers that have each been cited at least h times.

Example 1:

Input: citations = [3,0,6,1,5]
Output: 3
Explanation: [3,0,6,1,5] means the researcher has 5 papers in total and each of them had received 3, 0, 6, 1, 5 citations respectively.
Since the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, their h-index is 3.


Idea: Create a bucket of 0 to n for all citiation no. counts. Last nth bucket to store count value of > length of array as it cannot be answer. Then iterate from last & count frquency
& if it is >= index that means that index no. of citations have >= papers with >= citations.

TC: O(n) SC:O(n)

class Solution {
    public int hIndex(int[] citations) {
        Arrays.sort(citations);
        int n = citations.length, count=0;
        int [] countBucket = new int[n+1];
        for(int i=0;i<n;i++){
            if(citations[i]>n){countBucket[n]++;}
            else{countBucket[citations[i]]++;}
        }
        for(int i=n;i>=0;i--){
            count+=countBucket[i];
            if(count>=i) return i;
        }
        return 0;
    }
}
